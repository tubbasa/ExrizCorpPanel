// <auto-generated />
using ExrizCorpPanel.Data.Models.DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace ExrizCorpPanel.Data.Migrations
{
    [DbContext(typeof(ExrizKurumsalContext))]
    [Migration("20190323104258_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ExrizCorpPanel.Data.Models.DB.AreaDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("AreaId");

                    b.Property<string>("Content")
                        .HasColumnType("text");

                    b.Property<string>("IconName")
                        .HasMaxLength(250);

                    b.Property<int?>("ImageId");

                    b.Property<int?>("LangId");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.HasIndex("ImageId");

                    b.ToTable("AreaDetail");
                });

            modelBuilder.Entity("ExrizCorpPanel.Data.Models.DB.AreaType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AreaSystemTypeName")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("AreaType");
                });

            modelBuilder.Entity("ExrizCorpPanel.Data.Models.DB.Banner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BannerContent");

                    b.Property<string>("BannerLink");

                    b.Property<string>("BannerName");

                    b.Property<int?>("Image");

                    b.Property<int?>("LangId");

                    b.Property<int?>("RowNumber");

                    b.Property<int?>("ViewingPageTypeId");

                    b.HasKey("Id");

                    b.HasIndex("LangId");

                    b.HasIndex("ViewingPageTypeId");

                    b.ToTable("Banner");
                });

            modelBuilder.Entity("ExrizCorpPanel.Data.Models.DB.Blog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("CategoryId");

                    b.Property<string>("Name")
                        .HasMaxLength(150);

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Blog");
                });

            modelBuilder.Entity("ExrizCorpPanel.Data.Models.DB.BlogPost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("BlogId");

                    b.Property<string>("Content")
                        .HasColumnType("text");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime");

                    b.Property<int?>("ImageId");

                    b.Property<bool?>("IsIndexable")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((1))");

                    b.Property<int?>("LangId");

                    b.Property<string>("SubTitle");

                    b.Property<string>("Tags");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("BlogId");

                    b.HasIndex("ImageId");

                    b.HasIndex("LangId");

                    b.ToTable("BlogPost");
                });

            modelBuilder.Entity("ExrizCorpPanel.Data.Models.DB.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("FriendlyName");

                    b.Property<int?>("RelatedCategoryId");

                    b.HasKey("Id");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("ExrizCorpPanel.Data.Models.DB.CategoryLanguageMapping", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CategoryDesc")
                        .HasColumnType("text");

                    b.Property<int?>("CategoryId");

                    b.Property<string>("CategoryName");

                    b.Property<int?>("LangId");

                    b.Property<string>("Tags");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("LangId");

                    b.ToTable("CategoryLanguageMapping");
                });

            modelBuilder.Entity("ExrizCorpPanel.Data.Models.DB.CommentDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CustomerComment");

                    b.Property<int?>("CustomerCommentId");

                    b.Property<int?>("LangId");

                    b.HasKey("Id");

                    b.HasIndex("CustomerCommentId");

                    b.HasIndex("LangId");

                    b.ToTable("CommentDetail");
                });

            modelBuilder.Entity("ExrizCorpPanel.Data.Models.DB.CustomerComments", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CustomerFirm");

                    b.Property<string>("CustomerName");

                    b.HasKey("Id");

                    b.ToTable("CustomerComments");
                });

            modelBuilder.Entity("ExrizCorpPanel.Data.Models.DB.FooterObjects", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Content")
                        .HasColumnType("text");

                    b.Property<string>("ObjectName")
                        .HasMaxLength(150);

                    b.Property<int?>("TypeId");

                    b.HasKey("Id");

                    b.HasIndex("TypeId");

                    b.ToTable("FooterObjects");
                });

            modelBuilder.Entity("ExrizCorpPanel.Data.Models.DB.FooterType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("TypeName")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("FooterType");
                });

            modelBuilder.Entity("ExrizCorpPanel.Data.Models.DB.Galery", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("GaleryLink");

                    b.Property<string>("GaleryName");

                    b.HasKey("Id");

                    b.ToTable("Galery");
                });

            modelBuilder.Entity("ExrizCorpPanel.Data.Models.DB.GalleryLanguageMapping", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("GalleryContent")
                        .HasColumnType("text");

                    b.Property<int?>("GalleryId");

                    b.Property<string>("GalleryTitle");

                    b.Property<int?>("Langıd");

                    b.HasKey("Id");

                    b.HasIndex("GalleryId");

                    b.HasIndex("Langıd");

                    b.ToTable("GalleryLanguageMapping");
                });

            modelBuilder.Entity("ExrizCorpPanel.Data.Models.DB.GlobalUrls", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ControllerName")
                        .HasMaxLength(150);

                    b.Property<int?>("EntityId");

                    b.Property<string>("EntityName")
                        .HasMaxLength(150);

                    b.Property<string>("EntityTitle");

                    b.Property<string>("ExternalLink");

                    b.Property<bool?>("IsExternalLink");

                    b.Property<string>("SlugName")
                        .HasMaxLength(150);

                    b.HasKey("Id");

                    b.ToTable("GlobalUrls");
                });

            modelBuilder.Entity("ExrizCorpPanel.Data.Models.DB.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("GalleryId");

                    b.Property<string>("ImageAltTag");

                    b.Property<string>("ImageTag");

                    b.Property<string>("ImageTitle");

                    b.Property<string>("ImageUrl");

                    b.Property<bool?>("IsBelongGallery");

                    b.Property<bool?>("IsJob");

                    b.Property<int?>("JobId");

                    b.HasKey("Id");

                    b.HasIndex("GalleryId");

                    b.ToTable("Image");
                });

            modelBuilder.Entity("ExrizCorpPanel.Data.Models.DB.JobLanguageMapping", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Content")
                        .HasColumnType("text");

                    b.Property<int>("JobId");

                    b.Property<string>("JobName");

                    b.Property<int>("LangId");

                    b.HasKey("Id");

                    b.HasIndex("JobId");

                    b.HasIndex("LangId");

                    b.ToTable("JobLanguageMapping");
                });

            modelBuilder.Entity("ExrizCorpPanel.Data.Models.DB.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("LangFlagIcon");

                    b.Property<string>("LangName");

                    b.Property<string>("LangSymbol")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("LangFlagIcon");

                    b.ToTable("Language");
                });

            modelBuilder.Entity("ExrizCorpPanel.Data.Models.DB.Menu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("IsActive");

                    b.Property<bool?>("IsForMob");

                    b.Property<bool?>("IsForWeb");

                    b.Property<string>("Name")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Menu");
                });

            modelBuilder.Entity("ExrizCorpPanel.Data.Models.DB.MenuItems", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool?>("IsIndexable")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Keys");

                    b.Property<int?>("LangId");

                    b.Property<int?>("MenuId");

                    b.Property<int?>("RawNumber");

                    b.Property<int?>("RelatedMenuItemId");

                    b.Property<string>("Title")
                        .HasMaxLength(50);

                    b.Property<int>("UrlId");

                    b.HasKey("Id");

                    b.HasIndex("MenuId");

                    b.HasIndex("RelatedMenuItemId");

                    b.ToTable("MenuItems");
                });

            modelBuilder.Entity("ExrizCorpPanel.Data.Models.DB.Page", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool?>("IsIndexable")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("PageName")
                        .HasMaxLength(150);

                    b.HasKey("Id");

                    b.ToTable("Page");
                });

            modelBuilder.Entity("ExrizCorpPanel.Data.Models.DB.PageArea", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AreaName")
                        .HasMaxLength(150);

                    b.Property<int?>("RowNumber");

                    b.Property<int?>("TypeId");

                    b.HasKey("Id");

                    b.ToTable("PageArea");
                });

            modelBuilder.Entity("ExrizCorpPanel.Data.Models.DB.PageDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Content")
                        .HasColumnType("text");

                    b.Property<int?>("ImageId");

                    b.Property<int?>("LangId");

                    b.Property<int?>("PageId");

                    b.Property<string>("SeoKeywords")
                        .HasColumnType("text");

                    b.Property<string>("SubTitle")
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ImageId");

                    b.HasIndex("LangId");

                    b.HasIndex("PageId");

                    b.ToTable("PageDetail");
                });

            modelBuilder.Entity("ExrizCorpPanel.Data.Models.DB.PageTypes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("PageName")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<string>("PageTypeSystemName")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.ToTable("PageTypes");
                });

            modelBuilder.Entity("ExrizCorpPanel.Data.Models.DB.ReferenceJobMapping", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("JobSystemName")
                        .HasMaxLength(150);

                    b.Property<int?>("ReferenceId");

                    b.HasKey("Id");

                    b.HasIndex("ReferenceId");

                    b.ToTable("ReferenceJobMapping");
                });

            modelBuilder.Entity("ExrizCorpPanel.Data.Models.DB.References", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("ReferenceImage");

                    b.Property<string>("ReferenceName");

                    b.Property<string>("Url");

                    b.HasKey("Id");

                    b.HasIndex("ReferenceImage");

                    b.ToTable("References");
                });

            modelBuilder.Entity("ExrizCorpPanel.Data.Models.DB.ResourceVariable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("LangId");

                    b.Property<string>("ResourceContent")
                        .HasColumnType("text");

                    b.Property<int?>("ResourceId");

                    b.HasKey("Id");

                    b.HasIndex("LangId");

                    b.HasIndex("ResourceId");

                    b.ToTable("ResourceVariable");
                });

            modelBuilder.Entity("ExrizCorpPanel.Data.Models.DB.SiteDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AnalyticsApikey");

                    b.Property<int?>("FaviconImageId");

                    b.Property<string>("GsmNo")
                        .HasColumnType("nchar(10)");

                    b.Property<int?>("LogoImageId");

                    b.Property<int?>("MenuBranches");

                    b.Property<string>("SiteAddress");

                    b.Property<string>("SiteDesc");

                    b.Property<string>("SiteEmail");

                    b.Property<string>("SiteName")
                        .HasMaxLength(50);

                    b.Property<string>("SiteTagLine");

                    b.Property<string>("SiteTags");

                    b.Property<string>("SiteTitle");

                    b.Property<string>("TelNo")
                        .HasColumnType("nchar(10)");

                    b.Property<int?>("ThemeId");

                    b.HasKey("Id");

                    b.HasIndex("FaviconImageId");

                    b.HasIndex("LogoImageId");

                    b.HasIndex("ThemeId");

                    b.ToTable("SiteDetail");
                });

            modelBuilder.Entity("ExrizCorpPanel.Data.Models.DB.Slider", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("GalleryId");

                    b.Property<int?>("ImageId");

                    b.Property<int?>("LangId");

                    b.Property<int?>("RawNumber");

                    b.Property<string>("SliderContent")
                        .HasMaxLength(150);

                    b.Property<string>("SliderName");

                    b.Property<int?>("Url");

                    b.HasKey("Id");

                    b.HasIndex("ImageId");

                    b.HasIndex("LangId");

                    b.ToTable("Slider");
                });

            modelBuilder.Entity("ExrizCorpPanel.Data.Models.DB.SliderGallery", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("IsActive");

                    b.Property<string>("SliderGalleryName")
                        .HasMaxLength(150);

                    b.HasKey("Id");

                    b.ToTable("SliderGallery");
                });

            modelBuilder.Entity("ExrizCorpPanel.Data.Models.DB.SocialMediaObject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ProfileName");

                    b.Property<string>("Smprofile")
                        .HasColumnName("SMProfile")
                        .HasMaxLength(250);

                    b.Property<int?>("TypeId");

                    b.HasKey("Id");

                    b.HasIndex("TypeId");

                    b.ToTable("SocialMediaObject");
                });

            modelBuilder.Entity("ExrizCorpPanel.Data.Models.DB.SocialMediaTypes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("SocialMediaName")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("SocialMediaTypes");
                });

            modelBuilder.Entity("ExrizCorpPanel.Data.Models.DB.StringResource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ResourceName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("StringResource");
                });

            modelBuilder.Entity("ExrizCorpPanel.Data.Models.DB.Themes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("AllowableMenuBranches");

                    b.Property<string>("LayoutName");

                    b.Property<string>("ThemeName");

                    b.Property<string>("ThemePath");

                    b.HasKey("Id");

                    b.ToTable("Themes");
                });

            modelBuilder.Entity("ExrizCorpPanel.Data.Models.DB.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email")
                        .HasMaxLength(150);

                    b.Property<bool?>("IsActive");

                    b.Property<bool?>("IsAdmin");

                    b.Property<bool?>("IsEditor");

                    b.Property<bool?>("IsWebUser");

                    b.Property<string>("Name")
                        .HasMaxLength(150);

                    b.Property<string>("Password")
                        .HasMaxLength(250);

                    b.Property<string>("SurName")
                        .HasMaxLength(150);

                    b.Property<string>("UserName")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("ExrizCorpPanel.Data.Models.DB.AreaDetail", b =>
                {
                    b.HasOne("ExrizCorpPanel.Data.Models.DB.PageArea", "Area")
                        .WithMany("AreaDetail")
                        .HasForeignKey("AreaId")
                        .HasConstraintName("FK_AreaDetail_OnePageArea");

                    b.HasOne("ExrizCorpPanel.Data.Models.DB.Image", "Image")
                        .WithMany("AreaDetail")
                        .HasForeignKey("ImageId")
                        .HasConstraintName("FK_AreaDetail_Image");
                });

            modelBuilder.Entity("ExrizCorpPanel.Data.Models.DB.Banner", b =>
                {
                    b.HasOne("ExrizCorpPanel.Data.Models.DB.Language", "Lang")
                        .WithMany("Banner")
                        .HasForeignKey("LangId")
                        .HasConstraintName("FK_Banner_Language");

                    b.HasOne("ExrizCorpPanel.Data.Models.DB.PageTypes", "ViewingPageType")
                        .WithMany("Banner")
                        .HasForeignKey("ViewingPageTypeId")
                        .HasConstraintName("FK_Banner_PageTypes");
                });

            modelBuilder.Entity("ExrizCorpPanel.Data.Models.DB.Blog", b =>
                {
                    b.HasOne("ExrizCorpPanel.Data.Models.DB.Category", "Category")
                        .WithMany("Blog")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("FK_Blog_Blog");
                });

            modelBuilder.Entity("ExrizCorpPanel.Data.Models.DB.BlogPost", b =>
                {
                    b.HasOne("ExrizCorpPanel.Data.Models.DB.Blog", "Blog")
                        .WithMany("BlogPost")
                        .HasForeignKey("BlogId")
                        .HasConstraintName("FK_BlogPost_Blog");

                    b.HasOne("ExrizCorpPanel.Data.Models.DB.Image", "Image")
                        .WithMany("BlogPost")
                        .HasForeignKey("ImageId")
                        .HasConstraintName("FK_BlogPost_Image");

                    b.HasOne("ExrizCorpPanel.Data.Models.DB.Language", "Lang")
                        .WithMany("BlogPost")
                        .HasForeignKey("LangId")
                        .HasConstraintName("FK_BlogPost_Language");
                });

            modelBuilder.Entity("ExrizCorpPanel.Data.Models.DB.CategoryLanguageMapping", b =>
                {
                    b.HasOne("ExrizCorpPanel.Data.Models.DB.Category", "Category")
                        .WithMany("CategoryLanguageMapping")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("FK_CategoryLanguageMapping_Category");

                    b.HasOne("ExrizCorpPanel.Data.Models.DB.Language", "Lang")
                        .WithMany("CategoryLanguageMapping")
                        .HasForeignKey("LangId")
                        .HasConstraintName("FK_CategoryLanguageMapping_Language");
                });

            modelBuilder.Entity("ExrizCorpPanel.Data.Models.DB.CommentDetail", b =>
                {
                    b.HasOne("ExrizCorpPanel.Data.Models.DB.CustomerComments", "CustomerCommentNavigation")
                        .WithMany("CommentDetail")
                        .HasForeignKey("CustomerCommentId")
                        .HasConstraintName("FK_CommentDetail_CustomerComments");

                    b.HasOne("ExrizCorpPanel.Data.Models.DB.Language", "Lang")
                        .WithMany("CommentDetail")
                        .HasForeignKey("LangId")
                        .HasConstraintName("FK_CommentDetail_Language");
                });

            modelBuilder.Entity("ExrizCorpPanel.Data.Models.DB.FooterObjects", b =>
                {
                    b.HasOne("ExrizCorpPanel.Data.Models.DB.FooterType", "Type")
                        .WithMany("FooterObjects")
                        .HasForeignKey("TypeId")
                        .HasConstraintName("FK_FooterObjects_FooterType");
                });

            modelBuilder.Entity("ExrizCorpPanel.Data.Models.DB.GalleryLanguageMapping", b =>
                {
                    b.HasOne("ExrizCorpPanel.Data.Models.DB.Galery", "Gallery")
                        .WithMany("GalleryLanguageMapping")
                        .HasForeignKey("GalleryId")
                        .HasConstraintName("FK_GalleryLanguageMapping_Galery");

                    b.HasOne("ExrizCorpPanel.Data.Models.DB.Language", "LangıdNavigation")
                        .WithMany("GalleryLanguageMapping")
                        .HasForeignKey("Langıd")
                        .HasConstraintName("FK_GalleryLanguageMapping_Language");
                });

            modelBuilder.Entity("ExrizCorpPanel.Data.Models.DB.Image", b =>
                {
                    b.HasOne("ExrizCorpPanel.Data.Models.DB.Galery", "Gallery")
                        .WithMany("Image")
                        .HasForeignKey("GalleryId")
                        .HasConstraintName("FK_Image_Galery");
                });

            modelBuilder.Entity("ExrizCorpPanel.Data.Models.DB.JobLanguageMapping", b =>
                {
                    b.HasOne("ExrizCorpPanel.Data.Models.DB.ReferenceJobMapping", "Job")
                        .WithMany("JobLanguageMapping")
                        .HasForeignKey("JobId")
                        .HasConstraintName("FK_JobLanguageMapping_JobLanguageMapping");

                    b.HasOne("ExrizCorpPanel.Data.Models.DB.Language", "Lang")
                        .WithMany("JobLanguageMapping")
                        .HasForeignKey("LangId")
                        .HasConstraintName("FK_JobLanguageMapping_Language");
                });

            modelBuilder.Entity("ExrizCorpPanel.Data.Models.DB.Language", b =>
                {
                    b.HasOne("ExrizCorpPanel.Data.Models.DB.Image", "LangFlagIconNavigation")
                        .WithMany("Language")
                        .HasForeignKey("LangFlagIcon")
                        .HasConstraintName("FK_Language_Image");
                });

            modelBuilder.Entity("ExrizCorpPanel.Data.Models.DB.MenuItems", b =>
                {
                    b.HasOne("ExrizCorpPanel.Data.Models.DB.Menu", "Menu")
                        .WithMany("MenuItems")
                        .HasForeignKey("MenuId")
                        .HasConstraintName("FK_MenuItems_Menu");

                    b.HasOne("ExrizCorpPanel.Data.Models.DB.MenuItems", "RelatedMenuItem")
                        .WithMany("InverseRelatedMenuItem")
                        .HasForeignKey("RelatedMenuItemId")
                        .HasConstraintName("FK_MenuItems_MenuItems");
                });

            modelBuilder.Entity("ExrizCorpPanel.Data.Models.DB.PageDetail", b =>
                {
                    b.HasOne("ExrizCorpPanel.Data.Models.DB.Image", "Image")
                        .WithMany("PageDetail")
                        .HasForeignKey("ImageId")
                        .HasConstraintName("FK_PageDetail_Image");

                    b.HasOne("ExrizCorpPanel.Data.Models.DB.Language", "Lang")
                        .WithMany("PageDetail")
                        .HasForeignKey("LangId")
                        .HasConstraintName("FK_PageDetail_Language");

                    b.HasOne("ExrizCorpPanel.Data.Models.DB.Page", "Page")
                        .WithMany("PageDetail")
                        .HasForeignKey("PageId")
                        .HasConstraintName("FK_PageDetail_Page");
                });

            modelBuilder.Entity("ExrizCorpPanel.Data.Models.DB.ReferenceJobMapping", b =>
                {
                    b.HasOne("ExrizCorpPanel.Data.Models.DB.References", "Reference")
                        .WithMany("ReferenceJobMapping")
                        .HasForeignKey("ReferenceId")
                        .HasConstraintName("FK_ReferenceJobMapping_References");
                });

            modelBuilder.Entity("ExrizCorpPanel.Data.Models.DB.References", b =>
                {
                    b.HasOne("ExrizCorpPanel.Data.Models.DB.Image", "ReferenceImageNavigation")
                        .WithMany("References")
                        .HasForeignKey("ReferenceImage")
                        .HasConstraintName("FK_References_Image");
                });

            modelBuilder.Entity("ExrizCorpPanel.Data.Models.DB.ResourceVariable", b =>
                {
                    b.HasOne("ExrizCorpPanel.Data.Models.DB.Language", "Lang")
                        .WithMany("ResourceVariable")
                        .HasForeignKey("LangId")
                        .HasConstraintName("FK_ResourceVariable_Language");

                    b.HasOne("ExrizCorpPanel.Data.Models.DB.StringResource", "Resource")
                        .WithMany("ResourceVariable")
                        .HasForeignKey("ResourceId")
                        .HasConstraintName("FK_ResourceVariable_StringResource");
                });

            modelBuilder.Entity("ExrizCorpPanel.Data.Models.DB.SiteDetail", b =>
                {
                    b.HasOne("ExrizCorpPanel.Data.Models.DB.Image", "FaviconImage")
                        .WithMany("SiteDetailFaviconImage")
                        .HasForeignKey("FaviconImageId")
                        .HasConstraintName("FK_SiteDetail_Image1");

                    b.HasOne("ExrizCorpPanel.Data.Models.DB.Image", "LogoImage")
                        .WithMany("SiteDetailLogoImage")
                        .HasForeignKey("LogoImageId")
                        .HasConstraintName("FK_SiteDetail_Image");

                    b.HasOne("ExrizCorpPanel.Data.Models.DB.Themes", "Theme")
                        .WithMany("SiteDetail")
                        .HasForeignKey("ThemeId")
                        .HasConstraintName("FK_SiteDetail_Themes");
                });

            modelBuilder.Entity("ExrizCorpPanel.Data.Models.DB.Slider", b =>
                {
                    b.HasOne("ExrizCorpPanel.Data.Models.DB.Image", "Image")
                        .WithMany("Slider")
                        .HasForeignKey("ImageId")
                        .HasConstraintName("FK_Slider_Image");

                    b.HasOne("ExrizCorpPanel.Data.Models.DB.Language", "Lang")
                        .WithMany("Slider")
                        .HasForeignKey("LangId")
                        .HasConstraintName("FK_Slider_Language");
                });

            modelBuilder.Entity("ExrizCorpPanel.Data.Models.DB.SocialMediaObject", b =>
                {
                    b.HasOne("ExrizCorpPanel.Data.Models.DB.SocialMediaTypes", "Type")
                        .WithMany("SocialMediaObject")
                        .HasForeignKey("TypeId")
                        .HasConstraintName("FK_SocialMediaObject_SocialMediaObject");
                });
#pragma warning restore 612, 618
        }
    }
}
